#include <windows.h>

void SayLastError(){
	DWORD error = GetLastError();
	printf("\n 	Error Code: %d \n", error);
	
	if(	error ==	-2	)	printf(" 	TIME_SYNTAX_ERROR	\n	Tarih-Saat Gosterim Hatasi	");
	if(	error ==	-1	)	printf(" 	NO_ERROR	\n	Bir hata cikiti tanimlanmadi	");
	
	if(	error ==	0	)	printf(" 	ERROR_SUCCESS	\n	The operation completed successfully	");
	if(	error ==	1	)	printf(" 	ERROR_INVALID_FUNCTION	\n	Incorrect function	");
	if(	error ==	2	)	printf(" 	ERROR_FILE_NOT_FOUND	\n	The system cannot find the file specified	");
	if(	error ==	3	)	printf(" 	ERROR_PATH_NOT_FOUND	\n	The system cannot find the path specified	");
	if(	error ==	4	)	printf(" 	ERROR_TOO_MANY_OPEN_FILES	\n	The system cannot open the file	");
	if(	error ==	5	)	printf(" 	ERROR_ACCESS_DENIED	\n	Access is denied	");
	if(	error ==	6	)	printf(" 	ERROR_INVALID_HANDLE	\n	The handle is invalid	");
	if(	error ==	7	)	printf(" 	ERROR_ARENA_TRASHED	\n	The storage control blocks were destroyed	");
	if(	error ==	8	)	printf(" 	ERROR_NOT_ENOUGH_MEMORY	\n	Not enough storage is available to process this command	");
	if(	error ==	9	)	printf(" 	ERROR_INVALID_BLOCK	\n	The storage control block address is invalid	");
	if(	error ==	10	)	printf(" 	ERROR_BAD_ENVIRONMENT	\n	The environment is incorrect	");
	if(	error ==	11	)	printf(" 	ERROR_BAD_FORMAT	\n	An attempt was made to load a program with an incorrect format	");
	if(	error ==	12	)	printf(" 	ERROR_INVALID_ACCESS	\n	The access code is invalid	");
	if(	error ==	13	)	printf(" 	ERROR_INVALID_DATA	\n	The data is invalid	");
	if(	error ==	14	)	printf(" 	ERROR_OUTOFMEMORY	\n	Not enough storage is available to complete this operation	");
	if(	error ==	15	)	printf(" 	ERROR_INVALID_DRIVE	\n	The system cannot find the drive specified	");
	if(	error ==	16	)	printf(" 	ERROR_CURRENT_DIRECTORY	\n	The directory cannot be removed	");
	if(	error ==	17	)	printf(" 	ERROR_NOT_SAME_DEVICE	\n	The system cannot move the file to a different disk drive	");
	if(	error ==	18	)	printf(" 	ERROR_NO_MORE_FILES	\n	There are no more files	");
	if(	error ==	19	)	printf(" 	ERROR_WRITE_PROTECT	\n	The media is write protected	");
	if(	error ==	20	)	printf(" 	ERROR_BAD_UNIT	\n	The system cannot find the device specified	");
	if(	error ==	21	)	printf(" 	ERROR_NOT_READY	\n	The device is not ready	");
	if(	error ==	22	)	printf(" 	ERROR_BAD_COMMAND	\n	The device does not recognize the command	");
	if(	error ==	23	)	printf(" 	ERROR_CRC	\n	Data error cyclic redundancy check	");
	if(	error ==	24	)	printf(" 	ERROR_BAD_LENGTH	\n	The program issued a command but the command length is incorrect	");
	if(	error ==	25	)	printf(" 	ERROR_SEEK	\n	The drive cannot locate a specific area or track on the disk	");
	if(	error ==	26	)	printf(" 	ERROR_NOT_DOS_DISK	\n	The specified disk or diskette cannot be accessed	");
	if(	error ==	27	)	printf(" 	ERROR_SECTOR_NOT_FOUND	\n	The drive cannot find the sector requested	");
	if(	error ==	28	)	printf(" 	ERROR_OUT_OF_PAPER	\n	The printer is out of paper	");
	if(	error ==	29	)	printf(" 	ERROR_WRITE_FAULT	\n	The system cannot write to the specified device	");
	if(	error ==	30	)	printf(" 	ERROR_READ_FAULT	\n	The system cannot read from the specified device	");
	if(	error ==	31	)	printf(" 	ERROR_GEN_FAILURE	\n	A device attached to the system is not functioning	");
	if(	error ==	32	)	printf(" 	ERROR_SHARING_VIOLATION	\n	The process cannot access the file because it is being used by another process	");
	if(	error ==	33	)	printf(" 	ERROR_LOCK_VIOLATION	\n	The process cannot access the file because another process has locked a portion of the file	");
	if(	error ==	34	)	printf(" 	ERROR_WRONG_DISK	\n	The wrong diskette is in the drive	");
	if(	error ==	36	)	printf(" 	ERROR_SHARING_BUFFER_EXCEEDED	\n	Too many files opened for sharing	");
	if(	error ==	38	)	printf(" 	ERROR_HANDLE_EOF	\n	Reached the end of the file	");
	if(	error ==	39	)	printf(" 	ERROR_HANDLE_DISK_FULL	\n	The disk is full	");
	if(	error ==	50	)	printf(" 	ERROR_NOT_SUPPORTED	\n	The request is not supported	");
	if(	error ==	51	)	printf(" 	ERROR_REM_NOT_LIST	\n	Windows cannot find the network path	");
	if(	error ==	52	)	printf(" 	ERROR_DUP_NAME	\n	You were not connected because a duplicate name exists on the network	");
	if(	error ==	53	)	printf(" 	ERROR_BAD_NETPATH	\n	The network path was not found	");
	if(	error ==	54	)	printf(" 	ERROR_NETWORK_BUSY	\n	The network is busy	");
	if(	error ==	55	)	printf(" 	ERROR_DEV_NOT_EXIST	\n	The specified network resource or device is no longer available	");
	if(	error ==	56	)	printf(" 	ERROR_TOO_MANY_CMDS	\n	The network BIOS command limit has been reached	");
	if(	error ==	57	)	printf(" 	ERROR_ADAP_HDW_ERR	\n	A network adapter hardware error occurred	");
	if(	error ==	58	)	printf(" 	ERROR_BAD_NET_RESP	\n	The specified server cannot perform the requested operation	");
	if(	error ==	59	)	printf(" 	ERROR_UNEXP_NET_ERR	\n	An unexpected network error occurred	");
	if(	error ==	60	)	printf(" 	ERROR_BAD_REM_ADAP	\n	The remote adapter is not compatible	");
	if(	error ==	61	)	printf(" 	ERROR_PRINTQ_FULL	\n	The printer queue is full	");
	if(	error ==	62	)	printf(" 	ERROR_NO_SPOOL_SPACE	\n	Space to store the file waiting to be printed is not available on the server	");
	if(	error ==	63	)	printf(" 	ERROR_PRINT_CANCELLED	\n	Your file waiting to be printed was deleted	");
	if(	error ==	64	)	printf(" 	ERROR_NETNAME_DELETED	\n	The specified network name is no longer available	");
	if(	error ==	65	)	printf(" 	ERROR_NETWORK_ACCESS_DENIED	\n	Network access is denied	");
	if(	error ==	66	)	printf(" 	ERROR_BAD_DEV_TYPE	\n	The network resource type is not correct	");
	if(	error ==	67	)	printf(" 	ERROR_BAD_NET_NAME	\n	The network name cannot be found	");
	if(	error ==	68	)	printf(" 	ERROR_TOO_MANY_NAMES	\n	The name limit for the local computer network adapter card was exceeded	");
	if(	error ==	69	)	printf(" 	ERROR_TOO_MANY_SESS	\n	The network BIOS session limit was exceeded	");
	if(	error ==	70	)	printf(" 	ERROR_SHARING_PAUSED	\n	The remote server has been paused or is in the process of being started	");
	if(	error ==	71	)	printf(" 	ERROR_REQ_NOT_ACCEP	\n	No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept	");
	if(	error ==	72	)	printf(" 	ERROR_REDIR_PAUSED	\n	The specified printer or disk device has been paused	");
	if(	error ==	80	)	printf(" 	ERROR_FILE_EXISTS	\n	The file exists	");
	if(	error ==	82	)	printf(" 	ERROR_CANNOT_MAKE	\n	The directory or file cannot be created	");
	if(	error ==	83	)	printf(" 	ERROR_FAIL_I24	\n	Fail on INT 24	");
	if(	error ==	84	)	printf(" 	ERROR_OUT_OF_STRUCTURES	\n	Storage to process this request is not available	");
	if(	error ==	85	)	printf(" 	ERROR_ALREADY_ASSIGNED	\n	The local device name is already in use	");
	if(	error ==	86	)	printf(" 	ERROR_INVALID_PASSWORD	\n	The specified network password is not correct	");
	if(	error ==	87	)	printf(" 	ERROR_INVALID_PARAMETER	\n	The parameter is incorrect");
	if(	error ==	88	)	printf(" 	ERROR_NET_WRITE_FAULT	\n	A write fault occurred on the network	");
	if(	error ==	89	)	printf(" 	ERROR_NO_PROC_SLOTS	\n	The system cannot start another process at this time	");
	if(	error ==	100	)	printf(" 	ERROR_TOO_MANY_SEMAPHORES	\n	Cannot create another system semaphore	");
	if(	error ==	101	)	printf(" 	ERROR_EXCL_SEM_ALREADY_OWNED	\n	The exclusive semaphore is owned by another process	");
	if(	error ==	102	)	printf(" 	ERROR_SEM_IS_SET	\n	The semaphore is set and cannot be closed	");
	if(	error ==	103	)	printf(" 	ERROR_TOO_MANY_SEM_REQUESTS	\n	The semaphore cannot be set again	");
	if(	error ==	104	)	printf(" 	ERROR_INVALID_AT_INTERRUPT_TIME	\n	Cannot request exclusive semaphores at interrupt time	");
	if(	error ==	105	)	printf(" 	ERROR_SEM_OWNER_DIED	\n	The previous ownership of this semaphore has ended	");
	if(	error ==	106	)	printf(" 	ERROR_SEM_USER_LIMIT	\n	Insert the diskette for drive %1	");
	if(	error ==	107	)	printf(" 	ERROR_DISK_CHANGE	\n	The program stopped because an alternate diskette was not inserted	");
	if(	error ==	108	)	printf(" 	ERROR_DRIVE_LOCKED	\n	The disk is in use or locked by another process	");
	if(	error ==	109	)	printf(" 	ERROR_BROKEN_PIPE	\n	The pipe has been ended	");
	if(	error ==	110	)	printf(" 	ERROR_OPEN_FAILED	\n	The system cannot open the device or file specified	");
	if(	error ==	111	)	printf(" 	ERROR_BUFFER_OVERFLOW	\n	The file name is too long	");
	if(	error ==	112	)	printf(" 	ERROR_DISK_FULL	\n	There is not enough space on the disk	");
	if(	error ==	113	)	printf(" 	ERROR_NO_MORE_SEARCH_HANDLES	\n	No more internal file identifiers available	");
	if(	error ==	114	)	printf(" 	ERROR_INVALID_TARGET_HANDLE	\n	The target internal file identifier is incorrect	");
	if(	error ==	117	)	printf(" 	ERROR_INVALID_CATEGORY	\n	The IOCTL call made by the application program is not correct	");
	if(	error ==	118	)	printf(" 	ERROR_INVALID_VERIFY_SWITCH	\n	The verify-on-write switch parameter value is not correct	");
	if(	error ==	119	)	printf(" 	ERROR_BAD_DRIVER_LEVEL	\n	The system does not support the command requested	");
	if(	error ==	120	)	printf(" 	ERROR_CALL_NOT_IMPLEMENTED	\n	This function is not supported on this system	");
	if(	error ==	121	)	printf(" 	ERROR_SEM_TIMEOUT	\n	The semaphore timeout period has expired	");
	if(	error ==	122	)	printf(" 	ERROR_INSUFFICIENT_BUFFER	\n	The data area passed to a system call is too small	");
	if(	error ==	123	)	printf(" 	ERROR_INVALID_NAME	\n	The filename, directory name, or volume label syntax is incorrect	");
	if(	error ==	124	)	printf(" 	ERROR_INVALID_LEVEL	\n	The system call level is not correct	");
	if(	error ==	125	)	printf(" 	ERROR_NO_VOLUME_LABEL	\n	The disk has no volume label	");
	if(	error ==	126	)	printf(" 	ERROR_MOD_NOT_FOUND	\n	The specified module could not be found	");
	if(	error ==	127	)	printf(" 	ERROR_PROC_NOT_FOUND	\n	The specified procedure could not be found	");
	if(	error ==	128	)	printf(" 	ERROR_WAIT_NO_CHILDREN	\n	There are no child processes to wait for	");
	if(	error ==	129	)	printf(" 	ERROR_CHILD_NOT_COMPLETE	\n	The %1 application cannot be run in Win32 mode	");
	if(	error ==	130	)	printf(" 	ERROR_DIRECT_ACCESS_HANDLE	\n	Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O	");
	if(	error ==	131	)	printf(" 	ERROR_NEGATIVE_SEEK	\n	An attempt was made to move the file pointer before the beginning of the file	");
	if(	error ==	132	)	printf(" 	ERROR_SEEK_ON_DEVICE	\n	The file pointer cannot be set on the specified device or file	");
	if(	error ==	133	)	printf(" 	ERROR_IS_JOIN_TARGET	\n	A JOIN or SUBST command cannot be used for a drive that contains previously joined drives	");
	if(	error ==	134	)	printf(" 	ERROR_IS_JOINED	\n	An attempt was made to use a JOIN or SUBST command on a drive that has already been joined	");
	if(	error ==	135	)	printf(" 	ERROR_IS_SUBSTED	\n	An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted	");
	if(	error ==	136	)	printf(" 	ERROR_NOT_JOINED	\n	The system tried to delete the JOIN of a drive that is not joined	");
	if(	error ==	137	)	printf(" 	ERROR_NOT_SUBSTED	\n	The system tried to delete the substitution of a drive that is not substituted	");
	if(	error ==	138	)	printf(" 	ERROR_JOIN_TO_JOIN	\n	The system tried to join a drive to a directory on a joined drive	");
	if(	error ==	139	)	printf(" 	ERROR_SUBST_TO_SUBST	\n	The system tried to substitute a drive to a directory on a substituted drive	");
	if(	error ==	140	)	printf(" 	ERROR_JOIN_TO_SUBST	\n	The system tried to join a drive to a directory on a substituted drive	");
	if(	error ==	141	)	printf(" 	ERROR_SUBST_TO_JOIN	\n	The system tried to SUBST a drive to a directory on a joined drive	");
	if(	error ==	142	)	printf(" 	ERROR_BUSY_DRIVE	\n	The system cannot perform a JOIN or SUBST at this time	");
	if(	error ==	143	)	printf(" 	ERROR_SAME_DRIVE	\n	The system cannot join or substitute a drive to or for a directory on the same drive	");
	if(	error ==	144	)	printf(" 	ERROR_DIR_NOT_ROOT	\n	The directory is not a subdirectory of the root directory	");
	if(	error ==	145	)	printf(" 	ERROR_DIR_NOT_EMPTY	\n	The directory is not empty	");
	if(	error ==	146	)	printf(" 	ERROR_IS_SUBST_PATH	\n	The path specified is being used in a substitute	");
	if(	error ==	147	)	printf(" 	ERROR_IS_JOIN_PATH	\n	Not enough resources are available to process this command	");
	if(	error ==	148	)	printf(" 	ERROR_PATH_BUSY	\n	The path specified cannot be used at this time	");
	if(	error ==	149	)	printf(" 	ERROR_IS_SUBST_TARGET	\n	An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute	");
	if(	error ==	150	)	printf(" 	ERROR_SYSTEM_TRACE	\n	System trace information was not specified in your CONFIG	");
	if(	error ==	151	)	printf(" 	ERROR_INVALID_EVENT_COUNT	\n	The number of specified semaphore events for DosMuxSemWait is not correct	");
	if(	error ==	152	)	printf(" 	ERROR_TOO_MANY_MUXWAITERS	\n	DosMuxSemWait did not execute; too many semaphores are already set	");
	if(	error ==	153	)	printf(" 	ERROR_INVALID_LIST_FORMAT	\n	The DosMuxSemWait list is not correct	");
	if(	error ==	154	)	printf(" 	ERROR_LABEL_TOO_LONG	\n	The volume label you entered exceeds the label character limit of the target file system	");
	if(	error ==	155	)	printf(" 	ERROR_TOO_MANY_TCBS	\n	Cannot create another thread	");
	if(	error ==	156	)	printf(" 	ERROR_SIGNAL_REFUSED	\n	The recipient process has refused the signal	");
	if(	error ==	157	)	printf(" 	ERROR_DISCARDED	\n	The segment is already discarded and cannot be locked	");
	if(	error ==	158	)	printf(" 	ERROR_NOT_LOCKED	\n	The segment is already unlocked	");
	if(	error ==	159	)	printf(" 	ERROR_BAD_THREADID_ADDR	\n	The address for the thread ID is not correct	");
	if(	error ==	160	)	printf(" 	ERROR_BAD_ARGUMENTS	\n	One or more arguments are not correct	");
	if(	error ==	161	)	printf(" 	ERROR_BAD_PATHNAME	\n	The specified path is invalid	");
	if(	error ==	162	)	printf(" 	ERROR_SIGNAL_PENDING	\n	A signal is already pending	");
	if(	error ==	164	)	printf(" 	ERROR_MAX_THRDS_REACHED	\n	No more threads can be created in the system	");
	if(	error ==	167	)	printf(" 	ERROR_LOCK_FAILED	\n	Unable to lock a region of a file	");
	if(	error ==	170	)	printf(" 	ERROR_BUSY	\n	The requested resource is in use	");
	if(	error ==	171	)	printf(" 	ERROR_DEVICE_SUPPORT_IN_PROGRESS	\n	Device's command support detection is in progress	");
	if(	error ==	173	)	printf(" 	ERROR_CANCEL_VIOLATION	\n	A lock request was not outstanding for the supplied cancel region	");
	if(	error ==	174	)	printf(" 	ERROR_ATOMIC_LOCKS_NOT_SUPPORTED	\n	The file system does not support atomic changes to the lock type	");
	if(	error ==	180	)	printf(" 	ERROR_INVALID_SEGMENT_NUMBER	\n	The system detected a segment number that was not correct	");
	if(	error ==	182	)	printf(" 	ERROR_INVALID_ORDINAL	\n	The operating system cannot run %1	");
	if(	error ==	183	)	printf(" 	ERROR_ALREADY_EXISTS	\n	Cannot create a file when that file already exists	");
	if(	error ==	186	)	printf(" 	ERROR_INVALID_FLAG_NUMBER	\n	The flag passed is not correct	");
	if(	error ==	187	)	printf(" 	ERROR_SEM_NOT_FOUND	\n	The specified system semaphore name was not found	");
	if(	error ==	188	)	printf(" 	ERROR_INVALID_STARTING_CODESEG	\n	The operating system cannot run %1	");
	if(	error ==	189	)	printf(" 	ERROR_INVALID_STACKSEG	\n	The operating system cannot run %1	");
	if(	error ==	190	)	printf(" 	ERROR_INVALID_MODULETYPE	\n	The operating system cannot run %1	");
	if(	error ==	191	)	printf(" 	ERROR_INVALID_EXE_SIGNATURE	\n	Cannot run %1 in Win32 mode	");
	if(	error ==	192	)	printf(" 	ERROR_EXE_MARKED_INVALID	\n	The operating system cannot run %1	");
	if(	error ==	193	)	printf(" 	ERROR_BAD_EXE_FORMAT	\n	%1 is not a valid Win32 application	");
	if(	error ==	194	)	printf(" 	ERROR_ITERATED_DATA_EXCEEDS_64k	\n	The operating system cannot run %1	");
	if(	error ==	195	)	printf(" 	ERROR_INVALID_MINALLOCSIZE	\n	The operating system cannot run %1	");
	if(	error ==	196	)	printf(" 	ERROR_DYNLINK_FROM_INVALID_RING	\n	The operating system cannot run this application program	");
	if(	error ==	197	)	printf(" 	ERROR_IOPL_NOT_ENABLED	\n	The operating system is not presently configured to run this application	");
	if(	error ==	198	)	printf(" 	ERROR_INVALID_SEGDPL	\n	The operating system cannot run %1	");
	if(	error ==	199	)	printf(" 	ERROR_AUTODATASEG_EXCEEDS_64k	\n	The operating system cannot run this application program	");
	if(	error ==	200	)	printf(" 	ERROR_RING2SEG_MUST_BE_MOVABLE	\n	The code segment cannot be greater than or equal to 64K	");
	if(	error ==	201	)	printf(" 	ERROR_RELOC_CHAIN_XEEDS_SEGLIM	\n	The operating system cannot run %1	");
	if(	error ==	202	)	printf(" 	ERROR_INFLOOP_IN_RELOC_CHAIN	\n	The operating system cannot run %1	");
	if(	error ==	203	)	printf(" 	ERROR_ENVVAR_NOT_FOUND	\n	The system could not find the environment option that was entered	");
	if(	error ==	205	)	printf(" 	ERROR_NO_SIGNAL_SENT	\n	No process in the command subtree has a signal handler	");
	if(	error ==	206	)	printf(" 	ERROR_FILENAME_EXCED_RANGE	\n	The filename or extension is too long	");
	if(	error ==	207	)	printf(" 	ERROR_RING2_STACK_IN_USE	\n	The ring 2 stack is in use	");
	if(	error ==	208	)	printf(" 	ERROR_META_EXPANSION_TOO_LONG	\n	The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified	");
	if(	error ==	209	)	printf(" 	ERROR_INVALID_SIGNAL_NUMBER	\n	The signal being posted is not correct	");
	if(	error ==	210	)	printf(" 	ERROR_THREAD_1_INACTIVE	\n	The signal handler cannot be set	");
	if(	error ==	212	)	printf(" 	ERROR_LOCKED	\n	The segment is locked and cannot be reallocated	");
	if(	error ==	214	)	printf(" 	ERROR_TOO_MANY_MODULES	\n	Too many dynamic-link modules are attached to this program or dynamic-link module	");
	if(	error ==	215	)	printf(" 	ERROR_NESTING_NOT_ALLOWED	\n	Cannot nest calls to LoadModule	");
	if(	error ==	216	)	printf(" 	ERROR_EXE_MACHINE_TYPE_MISMATCH	\n	This version of %1 is not compatible with the version of Windows you're running	");
	if(	error ==	217	)	printf(" 	ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY	\n	The image file %1 is signed, unable to modify	");
	if(	error ==	218	)	printf(" 	ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY	\n	The image file %1 is strong signed, unable to modify	");
	if(	error ==	220	)	printf(" 	ERROR_FILE_CHECKED_OUT	\n	This file is checked out or locked for editing by another user	");
	if(	error ==	221	)	printf(" 	ERROR_CHECKOUT_REQUIRED	\n	The file must be checked out before saving changes	");
	if(	error ==	222	)	printf(" 	ERROR_BAD_FILE_TYPE	\n	The file type being saved or retrieved has been blocked	");
	if(	error ==	223	)	printf(" 	ERROR_FILE_TOO_LARGE	\n	The file size exceeds the limit allowed and cannot be saved	");
	if(	error ==	224	)	printf(" 	ERROR_FORMS_AUTH_REQUIRED	\n	Access Denied	");
	if(	error ==	225	)	printf(" 	ERROR_VIRUS_INFECTED	\n	Operation did not complete successfully because the file contains a virus or potentially unwanted software	");
	if(	error ==	226	)	printf(" 	ERROR_VIRUS_DELETED	\n	This file contains a virus or potentially unwanted software and cannot be opened	");
	if(	error ==	229	)	printf(" 	ERROR_PIPE_LOCAL	\n	The pipe is local	");
	if(	error ==	230	)	printf(" 	ERROR_BAD_PIPE	\n	The pipe state is invalid	");
	if(	error ==	231	)	printf(" 	ERROR_PIPE_BUSY	\n	All pipe instances are busy	");
	if(	error ==	232	)	printf(" 	ERROR_NO_DATA	\n	The pipe is being closed	");
	if(	error ==	233	)	printf(" 	ERROR_PIPE_NOT_CONNECTED	\n	No process is on the other end of the pipe	");
	if(	error ==	234	)	printf(" 	ERROR_MORE_DATA	\n	More data is available	");
	if(	error ==	240	)	printf(" 	ERROR_VC_DISCONNECTED	\n	The session was canceled	");
	if(	error ==	254	)	printf(" 	ERROR_INVALID_EA_NAME	\n	The specified extended attribute name was invalid	");
	if(	error ==	255	)	printf(" 	ERROR_EA_LIST_INCONSISTENT	\n	The extended attributes are inconsistent	");
	if(	error ==	258	)	printf(" 	WAIT_TIMEOUT	\n	The wait operation timed out	");
	if(	error ==	259	)	printf(" 	ERROR_NO_MORE_ITEMS	\n	No more data is available	");
	if(	error ==	266	)	printf(" 	ERROR_CANNOT_COPY	\n	The copy functions cannot be used	");
	if(	error ==	267	)	printf(" 	ERROR_DIRECTORY	\n	The directory name is invalid	");
	if(	error ==	275	)	printf(" 	ERROR_EAS_DIDNT_FIT	\n	The extended attributes did not fit in the buffer	");
	if(	error ==	276	)	printf(" 	ERROR_EA_FILE_CORRUPT	\n	The extended attribute file on the mounted file system is corrupt	");
	if(	error ==	277	)	printf(" 	ERROR_EA_TABLE_FULL	\n	The extended attribute table file is full	");
	if(	error ==	278	)	printf(" 	ERROR_INVALID_EA_HANDLE	\n	The specified extended attribute handle is invalid	");
	if(	error ==	282	)	printf(" 	ERROR_EAS_NOT_SUPPORTED	\n	The mounted file system does not support extended attributes	");
	if(	error ==	288	)	printf(" 	ERROR_NOT_OWNER	\n	Attempt to release mutex not owned by caller	");
	if(	error ==	298	)	printf(" 	ERROR_TOO_MANY_POSTS	\n	Too many posts were made to a semaphore	");
	if(	error ==	299	)	printf(" 	ERROR_PARTIAL_COPY	\n	Only part of a ReadProcessMemory or WriteProcessMemory request was completed	");
	if(	error ==	300	)	printf(" 	ERROR_OPLOCK_NOT_GRANTED	\n	The oplock request is denied	");
	if(	error ==	301	)	printf(" 	ERROR_INVALID_OPLOCK_PROTOCOL	\n	An invalid oplock acknowledgment was received by the system	");
	if(	error ==	302	)	printf(" 	ERROR_DISK_TOO_FRAGMENTED	\n	The volume is too fragmented to complete this operation	");
	if(	error ==	303	)	printf(" 	ERROR_DELETE_PENDING	\n	The file cannot be opened because it is in the process of being deleted	");
	if(	error ==	304	)	printf(" 	ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING	\n	Short name settings may not be changed on this volume due to the global registry setting	");
	if(	error ==	305	)	printf(" 	ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME	\n	Short names are not enabled on this volume	");
	if(	error ==	306	)	printf(" 	ERROR_SECURITY_STREAM_IS_INCONSISTENT	\n	The security stream for the given volume is in an inconsistent state	");
	if(	error ==	307	)	printf(" 	ERROR_INVALID_LOCK_RANGE	\n	A requested file lock operation cannot be processed due to an invalid byte range	");
	if(	error ==	308	)	printf(" 	ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT	\n	The subsystem needed to support the image type is not present	");
	if(	error ==	309	)	printf(" 	ERROR_NOTIFICATION_GUID_ALREADY_DEFINED	\n	The specified file already has a notification GUID associated with it	");
	if(	error ==	310	)	printf(" 	ERROR_INVALID_EXCEPTION_HANDLER	\n	An invalid exception handler routine has been detected	");
	if(	error ==	311	)	printf(" 	ERROR_DUPLICATE_PRIVILEGES	\n	Duplicate privileges were specified for the token	");
	if(	error ==	312	)	printf(" 	ERROR_NO_RANGES_PROCESSED	\n	No ranges for the specified operation were able to be processed	");
	if(	error ==	313	)	printf(" 	ERROR_NOT_ALLOWED_ON_SYSTEM_FILE	\n	Operation is not allowed on a file system internal file	");
	if(	error ==	314	)	printf(" 	ERROR_DISK_RESOURCES_EXHAUSTED	\n	The physical resources of this disk have been exhausted	");
	if(	error ==	315	)	printf(" 	ERROR_INVALID_TOKEN	\n	The token representing the data is invalid	");
	if(	error ==	316	)	printf(" 	ERROR_DEVICE_FEATURE_NOT_SUPPORTED	\n	The device does not support the command feature	");
	if(	error ==	317	)	printf(" 	ERROR_MR_MID_NOT_FOUND	\n	The system cannot find message text for message number 0x%1 in the message file for %2	");
	if(	error ==	318	)	printf(" 	ERROR_SCOPE_NOT_FOUND	\n	The scope specified was not found	");
	if(	error ==	319	)	printf(" 	ERROR_UNDEFINED_SCOPE	\n	The Central Access Policy specified is not defined on the target machine	");
	if(	error ==	320	)	printf(" 	ERROR_INVALID_CAP	\n	The Central Access Policy obtained from Active Directory is invalid	");
	if(	error ==	321	)	printf(" 	ERROR_DEVICE_UNREACHABLE	\n	The device is unreachable	");
	if(	error ==	322	)	printf(" 	ERROR_DEVICE_NO_RESOURCES	\n	The target device has insufficient resources to complete the operation	");
	if(	error ==	323	)	printf(" 	ERROR_DATA_CHECKSUM_ERROR	\n	A data integrity checksum error occurred	");
	if(	error ==	324	)	printf(" 	ERROR_INTERMIXED_KERNEL_EA_OPERATION	\n	An attempt was made to modify both a KERNEL and normal Extended Attribute EA in the same operation	");
	if(	error ==	326	)	printf(" 	ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED	\n	Device does not support file-level TRIM	");
	if(	error ==	327	)	printf(" 	ERROR_OFFSET_ALIGNMENT_VIOLATION	\n	The command specified a data offset that does not align to the device's granularity/alignment	");
	if(	error ==	328	)	printf(" 	ERROR_INVALID_FIELD_IN_PARAMETER_LIST	\n	The command specified an invalid field in its parameter list	");
	if(	error ==	329	)	printf(" 	ERROR_OPERATION_IN_PROGRESS	\n	An operation is currently in progress with the device	");
	if(	error ==	330	)	printf(" 	ERROR_BAD_DEVICE_PATH	\n	An attempt was made to send down the command via an invalid path to the target device	");
	if(	error ==	331	)	printf(" 	ERROR_TOO_MANY_DESCRIPTORS	\n	The command specified a number of descriptors that exceeded the maximum supported by the device	");
	if(	error ==	332	)	printf(" 	ERROR_SCRUB_DATA_DISABLED	\n	Scrub is disabled on the specified file	");
	if(	error ==	333	)	printf(" 	ERROR_NOT_REDUNDANT_STORAGE	\n	The storage device does not provide redundancy	");
	if(	error ==	334	)	printf(" 	ERROR_RESIDENT_FILE_NOT_SUPPORTED	\n	An operation is not supported on a resident file	");
	if(	error ==	335	)	printf(" 	ERROR_COMPRESSED_FILE_NOT_SUPPORTED	\n	An operation is not supported on a compressed file	");
	if(	error ==	336	)	printf(" 	ERROR_DIRECTORY_NOT_SUPPORTED	\n	An operation is not supported on a directory	");
	if(	error ==	337	)	printf(" 	ERROR_NOT_READ_FROM_COPY	\n	The specified copy of the requested data could not be read	");
	if(	error ==	350	)	printf(" 	ERROR_FAIL_NOACTION_REBOOT	\n	No action was taken as a system reboot is required	");
	if(	error ==	351	)	printf(" 	ERROR_FAIL_SHUTDOWN	\n	The shutdown operation failed	");
	if(	error ==	352	)	printf(" 	ERROR_FAIL_RESTART	\n	The restart operation failed	");
	if(	error ==	353	)	printf(" 	ERROR_MAX_SESSIONS_REACHED	\n	The maximum number of sessions has been reached	");
	if(	error ==	400	)	printf(" 	ERROR_THREAD_MODE_ALREADY_BACKGROUND	\n	The thread is already in background processing mode	");
	if(	error ==	401	)	printf(" 	ERROR_THREAD_MODE_NOT_BACKGROUND	\n	The thread is not in background processing mode	");
	if(	error ==	402	)	printf(" 	ERROR_PROCESS_MODE_ALREADY_BACKGROUND	\n	The process is already in background processing mode	");
	if(	error ==	403	)	printf(" 	ERROR_PROCESS_MODE_NOT_BACKGROUND	\n	The process is not in background processing mode	");
	if(	error ==	487	)	printf(" 	ERROR_INVALID_ADDRESS	\n	Attempt to access invalid address	");
	printf("\n");
	SetLastError(-1);
}

